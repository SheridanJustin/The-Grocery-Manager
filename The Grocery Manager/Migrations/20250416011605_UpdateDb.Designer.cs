// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using The_Grocery_Manager.Models;

#nullable disable

namespace The_Grocery_Manager.Migrations
{
    [DbContext(typeof(GroceryDbContext))]
    [Migration("20250416011605_UpdateDb")]
    partial class UpdateDb
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("IngredientShoppingList", b =>
                {
                    b.Property<int>("IngredientsIngredientId")
                        .HasColumnType("int");

                    b.Property<int>("ShoppingListsShoppingListId")
                        .HasColumnType("int");

                    b.HasKey("IngredientsIngredientId", "ShoppingListsShoppingListId");

                    b.HasIndex("ShoppingListsShoppingListId");

                    b.ToTable("IngredientShoppingList");
                });

            modelBuilder.Entity("The_Grocery_Manager.Models.Ingredient", b =>
                {
                    b.Property<int>("IngredientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IngredientId"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("RecipeId")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IngredientId");

                    b.HasIndex("RecipeId");

                    b.ToTable("Ingredients");

                    b.HasData(
                        new
                        {
                            IngredientId = 1,
                            Description = "Dry pasta noodles",
                            Name = "Spaghetti",
                            RecipeId = 1,
                            Unit = "Box"
                        },
                        new
                        {
                            IngredientId = 2,
                            Description = "Lean ground beef",
                            Name = "Ground Beef",
                            RecipeId = 1,
                            Unit = "Pound"
                        },
                        new
                        {
                            IngredientId = 3,
                            Description = "Boneless chicken breast",
                            Name = "Chicken",
                            RecipeId = 2,
                            Unit = "Piece"
                        },
                        new
                        {
                            IngredientId = 4,
                            Description = "All-purpose flour for pancakes",
                            Name = "Flour",
                            RecipeId = 3,
                            Unit = "Cup"
                        },
                        new
                        {
                            IngredientId = 5,
                            Description = "Sliced cheddar cheese",
                            Name = "Cheddar Cheese",
                            RecipeId = 4,
                            Unit = "Slice"
                        });
                });

            modelBuilder.Entity("The_Grocery_Manager.Models.Inventory", b =>
                {
                    b.Property<int>("InventoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("InventoryId"));

                    b.Property<string>("ItemName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastUpdated")
                        .HasColumnType("datetime2");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("InventoryId");

                    b.HasIndex("UserId");

                    b.ToTable("Inventories");

                    b.HasData(
                        new
                        {
                            InventoryId = 1,
                            ItemName = "Spaghetti",
                            LastUpdated = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 2.0,
                            Unit = "Boxes",
                            UserId = 1
                        },
                        new
                        {
                            InventoryId = 2,
                            ItemName = "Ground Beef",
                            LastUpdated = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 1.0,
                            Unit = "Pound",
                            UserId = 1
                        },
                        new
                        {
                            InventoryId = 3,
                            ItemName = "Chicken Breast",
                            LastUpdated = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 4.0,
                            Unit = "Pieces",
                            UserId = 2
                        },
                        new
                        {
                            InventoryId = 4,
                            ItemName = "Cheese",
                            LastUpdated = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 1.0,
                            Unit = "Block",
                            UserId = 3
                        },
                        new
                        {
                            InventoryId = 5,
                            ItemName = "Lettuce",
                            LastUpdated = new DateTime(2025, 4, 11, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Quantity = 1.0,
                            Unit = "Head",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("The_Grocery_Manager.Models.Recipe", b =>
                {
                    b.Property<int>("RecipeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("RecipeId"));

                    b.Property<string>("Instructions")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("RecipeId");

                    b.HasIndex("UserId");

                    b.ToTable("Recipes");

                    b.HasData(
                        new
                        {
                            RecipeId = 1,
                            Instructions = "Boil pasta, cook meat with sauce.",
                            Name = "Spaghetti Bolognese",
                            UserId = 1
                        },
                        new
                        {
                            RecipeId = 2,
                            Instructions = "Stir-fry chicken and vegetables with soy sauce.",
                            Name = "Chicken Stir Fry",
                            UserId = 2
                        },
                        new
                        {
                            RecipeId = 3,
                            Instructions = "Mix batter and cook on griddle.",
                            Name = "Pancakes",
                            UserId = 1
                        },
                        new
                        {
                            RecipeId = 4,
                            Instructions = "Butter bread and grill with cheese in between.",
                            Name = "Grilled Cheese",
                            UserId = 3
                        },
                        new
                        {
                            RecipeId = 5,
                            Instructions = "Chop vegetables and toss with dressing.",
                            Name = "Salad Bowl",
                            UserId = 2
                        });
                });

            modelBuilder.Entity("The_Grocery_Manager.Models.ShoppingList", b =>
                {
                    b.Property<int>("ShoppingListId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ShoppingListId"));

                    b.Property<DateTime>("GeneratedOn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.HasKey("ShoppingListId");

                    b.HasIndex("UserId");

                    b.ToTable("ShoppingLists");
                });

            modelBuilder.Entity("The_Grocery_Manager.Models.User", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserId"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FullName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("RegisteredOn")
                        .HasColumnType("datetime2");

                    b.HasKey("UserId");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserId = 2,
                            Email = "alice@example.com",
                            FullName = "Alice Smith",
                            PasswordHash = "hashed_password_1",
                            RegisteredOn = new DateTime(2024, 1, 10, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            UserId = 3,
                            Email = "bob@example.com",
                            FullName = "Bob Johnson",
                            PasswordHash = "hashed_password_2",
                            RegisteredOn = new DateTime(2024, 2, 15, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            UserId = 4,
                            Email = "charlie@example.com",
                            FullName = "Charlie Brown",
                            PasswordHash = "hashed_password_3",
                            RegisteredOn = new DateTime(2024, 3, 5, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("IngredientShoppingList", b =>
                {
                    b.HasOne("The_Grocery_Manager.Models.Ingredient", null)
                        .WithMany()
                        .HasForeignKey("IngredientsIngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("The_Grocery_Manager.Models.ShoppingList", null)
                        .WithMany()
                        .HasForeignKey("ShoppingListsShoppingListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("The_Grocery_Manager.Models.Ingredient", b =>
                {
                    b.HasOne("The_Grocery_Manager.Models.Recipe", null)
                        .WithMany("Ingredients")
                        .HasForeignKey("RecipeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("The_Grocery_Manager.Models.Inventory", b =>
                {
                    b.HasOne("The_Grocery_Manager.Models.User", "User")
                        .WithMany("Inventories")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("The_Grocery_Manager.Models.Recipe", b =>
                {
                    b.HasOne("The_Grocery_Manager.Models.User", null)
                        .WithMany("Recipes")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("The_Grocery_Manager.Models.ShoppingList", b =>
                {
                    b.HasOne("The_Grocery_Manager.Models.User", "User")
                        .WithMany("ShoppingLists")
                        .HasForeignKey("UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("The_Grocery_Manager.Models.Recipe", b =>
                {
                    b.Navigation("Ingredients");
                });

            modelBuilder.Entity("The_Grocery_Manager.Models.User", b =>
                {
                    b.Navigation("Inventories");

                    b.Navigation("Recipes");

                    b.Navigation("ShoppingLists");
                });
#pragma warning restore 612, 618
        }
    }
}
